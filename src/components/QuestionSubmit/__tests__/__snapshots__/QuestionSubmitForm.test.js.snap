// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<QuestionSubmitForm /> should render correctly and match snapshot 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <UnwrappedQuestionSubmitForm
      authUser={
        Object {
          "uid": "GvM7fEkYp4fcaSuScwixV0xinfT2",
        }
      }
    >
      <WithStyles(Paper)
        className="pageStyle submitForm"
      >
        <Paper
          className="pageStyle submitForm"
          classes={
            Object {
              "elevation0": "MuiPaper-elevation0-3",
              "elevation1": "MuiPaper-elevation1-4",
              "elevation10": "MuiPaper-elevation10-13",
              "elevation11": "MuiPaper-elevation11-14",
              "elevation12": "MuiPaper-elevation12-15",
              "elevation13": "MuiPaper-elevation13-16",
              "elevation14": "MuiPaper-elevation14-17",
              "elevation15": "MuiPaper-elevation15-18",
              "elevation16": "MuiPaper-elevation16-19",
              "elevation17": "MuiPaper-elevation17-20",
              "elevation18": "MuiPaper-elevation18-21",
              "elevation19": "MuiPaper-elevation19-22",
              "elevation2": "MuiPaper-elevation2-5",
              "elevation20": "MuiPaper-elevation20-23",
              "elevation21": "MuiPaper-elevation21-24",
              "elevation22": "MuiPaper-elevation22-25",
              "elevation23": "MuiPaper-elevation23-26",
              "elevation24": "MuiPaper-elevation24-27",
              "elevation3": "MuiPaper-elevation3-6",
              "elevation4": "MuiPaper-elevation4-7",
              "elevation5": "MuiPaper-elevation5-8",
              "elevation6": "MuiPaper-elevation6-9",
              "elevation7": "MuiPaper-elevation7-10",
              "elevation8": "MuiPaper-elevation8-11",
              "elevation9": "MuiPaper-elevation9-12",
              "root": "MuiPaper-root-1",
              "rounded": "MuiPaper-rounded-2",
            }
          }
          component="div"
          elevation={2}
          square={false}
        >
          <div
            className="MuiPaper-root-1 MuiPaper-elevation2-5 MuiPaper-rounded-2 pageStyle submitForm"
          >
            <HelmetWrapper
              defer={true}
              encodeSpecialCharacters={true}
            >
              <SideEffect(NullComponent)
                defer={true}
                encodeSpecialCharacters={true}
                title="Submit Question | politIQ trivia"
                titleAttributes={Object {}}
              >
                <NullComponent
                  defer={true}
                  encodeSpecialCharacters={true}
                  title="Submit Question | politIQ trivia"
                  titleAttributes={Object {}}
                />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <div>
              <div
                className="formHeader"
              >
                <Link
                  id="form-back"
                  replace={false}
                  style={
                    Object {
                      "marginLeft": "0",
                      "textDecoration": "none",
                    }
                  }
                  to="/home"
                >
                  <a
                    href="/home"
                    id="form-back"
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": "0",
                        "textDecoration": "none",
                      }
                    }
                  >
                    <WithStyles(Button)
                      color="primary"
                      variant="contained"
                    >
                      <Button
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit-49",
                            "contained": "MuiButton-contained-39",
                            "containedPrimary": "MuiButton-containedPrimary-40",
                            "containedSecondary": "MuiButton-containedSecondary-41",
                            "disabled": "MuiButton-disabled-48",
                            "extendedFab": "MuiButton-extendedFab-46",
                            "fab": "MuiButton-fab-45",
                            "flat": "MuiButton-flat-33",
                            "flatPrimary": "MuiButton-flatPrimary-34",
                            "flatSecondary": "MuiButton-flatSecondary-35",
                            "focusVisible": "MuiButton-focusVisible-47",
                            "fullWidth": "MuiButton-fullWidth-53",
                            "label": "MuiButton-label-29",
                            "mini": "MuiButton-mini-50",
                            "outlined": "MuiButton-outlined-36",
                            "outlinedPrimary": "MuiButton-outlinedPrimary-37",
                            "outlinedSecondary": "MuiButton-outlinedSecondary-38",
                            "raised": "MuiButton-raised-42",
                            "raisedPrimary": "MuiButton-raisedPrimary-43",
                            "raisedSecondary": "MuiButton-raisedSecondary-44",
                            "root": "MuiButton-root-28",
                            "sizeLarge": "MuiButton-sizeLarge-52",
                            "sizeSmall": "MuiButton-sizeSmall-51",
                            "text": "MuiButton-text-30",
                            "textPrimary": "MuiButton-textPrimary-31",
                            "textSecondary": "MuiButton-textSecondary-32",
                          }
                        }
                        color="primary"
                        component="button"
                        disableFocusRipple={false}
                        disabled={false}
                        fullWidth={false}
                        mini={false}
                        size="medium"
                        type="button"
                        variant="contained"
                      >
                        <WithStyles(ButtonBase)
                          className="MuiButton-root-28 MuiButton-contained-39 MuiButton-containedPrimary-40 MuiButton-raised-42 MuiButton-raisedPrimary-43"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-47"
                          type="button"
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiButton-root-28 MuiButton-contained-39 MuiButton-containedPrimary-40 MuiButton-raised-42 MuiButton-raisedPrimary-43"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-55",
                                "focusVisible": "MuiButtonBase-focusVisible-56",
                                "root": "MuiButtonBase-root-54",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-47"
                            tabIndex="0"
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root-54 MuiButton-root-28 MuiButton-contained-39 MuiButton-containedPrimary-40 MuiButton-raised-42 MuiButton-raisedPrimary-43"
                              disabled={false}
                              onBlur={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <span
                                className="MuiButton-label-29"
                              >
                                Back
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-170",
                                        "childLeaving": "MuiTouchRipple-childLeaving-171",
                                        "childPulsate": "MuiTouchRipple-childPulsate-172",
                                        "ripple": "MuiTouchRipple-ripple-167",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-169",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-168",
                                        "root": "MuiTouchRipple-root-166",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-166"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-166"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </a>
                </Link>
                <h1
                  style={
                    Object {
                      "marginLeft": "-3vw",
                    }
                  }
                >
                  Submit a Question
                </h1>
              </div>
              <h3
                style={
                  Object {
                    "marginTop": "5vh",
                    "textAlign": "center",
                  }
                }
              >
                Did you find a piece of news that everyone should know about?
              </h3>
              <p
                className="instructions"
              >
                 Add 
                <span
                  style={
                    Object {
                      "fontWeight": "bold",
                    }
                  }
                >
                  3 points
                </span>
                 to your score by dropping it below. We’ll review it and add it to the 
                <span
                  style={
                    Object {
                      "fontWeight": "bold",
                    }
                  }
                >
                  next
                </span>
                 quiz if its accepted. 
                <span
                  style={
                    Object {
                      "fontWeight": "bold",
                    }
                  }
                >
                  Please be
                </span>
                 sure to verify your information with a reliable source.
              </p>
              <form>
                <TextField
                  fullWidth={true}
                  id="standard-required"
                  margin="normal"
                  onChange={[Function]}
                  placeholder="Question"
                  required={false}
                  select={false}
                  type="text"
                  value=""
                  variant="standard"
                >
                  <WithStyles(FormControl)
                    fullWidth={true}
                    margin="normal"
                    required={false}
                    variant="standard"
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-60",
                          "marginDense": "MuiFormControl-marginDense-59",
                          "marginNormal": "MuiFormControl-marginNormal-58",
                          "root": "MuiFormControl-root-57",
                        }
                      }
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root-57 MuiFormControl-marginNormal-58 MuiFormControl-fullWidth-60"
                      >
                        <WithStyles(Input)
                          fullWidth={true}
                          id="standard-required"
                          onChange={[Function]}
                          placeholder="Question"
                          type="text"
                          value=""
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-64",
                                "error": "MuiInput-error-66",
                                "focused": "MuiInput-focused-63",
                                "formControl": "MuiInput-formControl-62",
                                "fullWidth": "MuiInput-fullWidth-68",
                                "input": "MuiInput-input-69",
                                "inputMarginDense": "MuiInput-inputMarginDense-70",
                                "inputMultiline": "MuiInput-inputMultiline-71",
                                "inputType": "MuiInput-inputType-72",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                "multiline": "MuiInput-multiline-67",
                                "root": "MuiInput-root-61",
                                "underline": "MuiInput-underline-65",
                              }
                            }
                            fullWidth={true}
                            id="standard-required"
                            onChange={[Function]}
                            placeholder="Question"
                            type="text"
                            value=""
                          >
                            <WithStyles(WithFormControlContext(InputBase))
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-64",
                                  "error": "MuiInput-error-66",
                                  "focused": "MuiInput-focused-63",
                                  "formControl": "MuiInput-formControl-62",
                                  "fullWidth": "MuiInput-fullWidth-68",
                                  "input": "MuiInput-input-69",
                                  "inputMarginDense": "MuiInput-inputMarginDense-70",
                                  "inputMultiline": "MuiInput-inputMultiline-71",
                                  "inputType": "MuiInput-inputType-72",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                  "multiline": "MuiInput-multiline-67",
                                  "root": "MuiInput-root-61 MuiInput-underline-65",
                                  "underline": null,
                                }
                              }
                              fullWidth={true}
                              id="standard-required"
                              inputComponent="input"
                              multiline={false}
                              onChange={[Function]}
                              placeholder="Question"
                              type="text"
                              value=""
                            >
                              <WithFormControlContext(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd-79",
                                    "adornedStart": "MuiInputBase-adornedStart-78",
                                    "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                    "error": "MuiInputBase-error-80 MuiInput-error-66",
                                    "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                    "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                    "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                    "input": "MuiInputBase-input-84 MuiInput-input-69",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                    "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                    "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                    "marginDense": "MuiInputBase-marginDense-81",
                                    "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                    "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                  }
                                }
                                fullWidth={true}
                                id="standard-required"
                                inputComponent="input"
                                multiline={false}
                                onChange={[Function]}
                                placeholder="Question"
                                type="text"
                                value=""
                              >
                                <InputBase
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-79",
                                      "adornedStart": "MuiInputBase-adornedStart-78",
                                      "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                      "error": "MuiInputBase-error-80 MuiInput-error-66",
                                      "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                      "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                      "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                      "input": "MuiInputBase-input-84 MuiInput-input-69",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                      "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                      "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                      "marginDense": "MuiInputBase-marginDense-81",
                                      "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                      "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                    }
                                  }
                                  fullWidth={true}
                                  id="standard-required"
                                  inputComponent="input"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  placeholder="Question"
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65 MuiInputBase-fullWidth-83 MuiInput-fullWidth-68 MuiInputBase-formControl-75 MuiInput-formControl-62"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-invalid={false}
                                      className="MuiInputBase-input-84 MuiInput-input-69"
                                      disabled={false}
                                      id="standard-required"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="Question"
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </InputBase>
                              </WithFormControlContext(InputBase)>
                            </WithStyles(WithFormControlContext(InputBase))>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
                <WithStyles(WithFormControlContext(FormHelperText))
                  htmlFor="standard-required"
                  style={
                    Object {
                      "color": "red",
                      "marginBottom": "1vh",
                    }
                  }
                >
                  <WithFormControlContext(FormHelperText)
                    classes={
                      Object {
                        "contained": "MuiFormHelperText-contained-95",
                        "disabled": "MuiFormHelperText-disabled-93",
                        "error": "MuiFormHelperText-error-92",
                        "filled": "MuiFormHelperText-filled-97",
                        "focused": "MuiFormHelperText-focused-96",
                        "marginDense": "MuiFormHelperText-marginDense-94",
                        "required": "MuiFormHelperText-required-98",
                        "root": "MuiFormHelperText-root-91",
                      }
                    }
                    htmlFor="standard-required"
                    style={
                      Object {
                        "color": "red",
                        "marginBottom": "1vh",
                      }
                    }
                  >
                    <FormHelperText
                      classes={
                        Object {
                          "contained": "MuiFormHelperText-contained-95",
                          "disabled": "MuiFormHelperText-disabled-93",
                          "error": "MuiFormHelperText-error-92",
                          "filled": "MuiFormHelperText-filled-97",
                          "focused": "MuiFormHelperText-focused-96",
                          "marginDense": "MuiFormHelperText-marginDense-94",
                          "required": "MuiFormHelperText-required-98",
                          "root": "MuiFormHelperText-root-91",
                        }
                      }
                      component="p"
                      htmlFor="standard-required"
                      style={
                        Object {
                          "color": "red",
                          "marginBottom": "1vh",
                        }
                      }
                    >
                      <p
                        className="MuiFormHelperText-root-91"
                        htmlFor="standard-required"
                        style={
                          Object {
                            "color": "red",
                            "marginBottom": "1vh",
                          }
                        }
                      >
                        Required *
                      </p>
                    </FormHelperText>
                  </WithFormControlContext(FormHelperText)>
                </WithStyles(WithFormControlContext(FormHelperText))>
                <TextField
                  fullWidth={true}
                  id="standard-required"
                  margin="normal"
                  onChange={[Function]}
                  placeholder="Answer 1"
                  required={false}
                  select={false}
                  type="text"
                  value=""
                  variant="standard"
                >
                  <WithStyles(FormControl)
                    fullWidth={true}
                    margin="normal"
                    required={false}
                    variant="standard"
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-60",
                          "marginDense": "MuiFormControl-marginDense-59",
                          "marginNormal": "MuiFormControl-marginNormal-58",
                          "root": "MuiFormControl-root-57",
                        }
                      }
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root-57 MuiFormControl-marginNormal-58 MuiFormControl-fullWidth-60"
                      >
                        <WithStyles(Input)
                          fullWidth={true}
                          id="standard-required"
                          onChange={[Function]}
                          placeholder="Answer 1"
                          type="text"
                          value=""
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-64",
                                "error": "MuiInput-error-66",
                                "focused": "MuiInput-focused-63",
                                "formControl": "MuiInput-formControl-62",
                                "fullWidth": "MuiInput-fullWidth-68",
                                "input": "MuiInput-input-69",
                                "inputMarginDense": "MuiInput-inputMarginDense-70",
                                "inputMultiline": "MuiInput-inputMultiline-71",
                                "inputType": "MuiInput-inputType-72",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                "multiline": "MuiInput-multiline-67",
                                "root": "MuiInput-root-61",
                                "underline": "MuiInput-underline-65",
                              }
                            }
                            fullWidth={true}
                            id="standard-required"
                            onChange={[Function]}
                            placeholder="Answer 1"
                            type="text"
                            value=""
                          >
                            <WithStyles(WithFormControlContext(InputBase))
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-64",
                                  "error": "MuiInput-error-66",
                                  "focused": "MuiInput-focused-63",
                                  "formControl": "MuiInput-formControl-62",
                                  "fullWidth": "MuiInput-fullWidth-68",
                                  "input": "MuiInput-input-69",
                                  "inputMarginDense": "MuiInput-inputMarginDense-70",
                                  "inputMultiline": "MuiInput-inputMultiline-71",
                                  "inputType": "MuiInput-inputType-72",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                  "multiline": "MuiInput-multiline-67",
                                  "root": "MuiInput-root-61 MuiInput-underline-65",
                                  "underline": null,
                                }
                              }
                              fullWidth={true}
                              id="standard-required"
                              inputComponent="input"
                              multiline={false}
                              onChange={[Function]}
                              placeholder="Answer 1"
                              type="text"
                              value=""
                            >
                              <WithFormControlContext(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd-79",
                                    "adornedStart": "MuiInputBase-adornedStart-78",
                                    "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                    "error": "MuiInputBase-error-80 MuiInput-error-66",
                                    "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                    "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                    "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                    "input": "MuiInputBase-input-84 MuiInput-input-69",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                    "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                    "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                    "marginDense": "MuiInputBase-marginDense-81",
                                    "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                    "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                  }
                                }
                                fullWidth={true}
                                id="standard-required"
                                inputComponent="input"
                                multiline={false}
                                onChange={[Function]}
                                placeholder="Answer 1"
                                type="text"
                                value=""
                              >
                                <InputBase
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-79",
                                      "adornedStart": "MuiInputBase-adornedStart-78",
                                      "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                      "error": "MuiInputBase-error-80 MuiInput-error-66",
                                      "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                      "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                      "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                      "input": "MuiInputBase-input-84 MuiInput-input-69",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                      "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                      "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                      "marginDense": "MuiInputBase-marginDense-81",
                                      "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                      "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                    }
                                  }
                                  fullWidth={true}
                                  id="standard-required"
                                  inputComponent="input"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  placeholder="Answer 1"
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65 MuiInputBase-fullWidth-83 MuiInput-fullWidth-68 MuiInputBase-formControl-75 MuiInput-formControl-62"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-invalid={false}
                                      className="MuiInputBase-input-84 MuiInput-input-69"
                                      disabled={false}
                                      id="standard-required"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="Answer 1"
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </InputBase>
                              </WithFormControlContext(InputBase)>
                            </WithStyles(WithFormControlContext(InputBase))>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
                <WithStyles(WithFormControlContext(FormHelperText))
                  htmlFor="standard-required"
                  style={
                    Object {
                      "color": "red",
                      "marginBottom": "1vh",
                    }
                  }
                >
                  <WithFormControlContext(FormHelperText)
                    classes={
                      Object {
                        "contained": "MuiFormHelperText-contained-95",
                        "disabled": "MuiFormHelperText-disabled-93",
                        "error": "MuiFormHelperText-error-92",
                        "filled": "MuiFormHelperText-filled-97",
                        "focused": "MuiFormHelperText-focused-96",
                        "marginDense": "MuiFormHelperText-marginDense-94",
                        "required": "MuiFormHelperText-required-98",
                        "root": "MuiFormHelperText-root-91",
                      }
                    }
                    htmlFor="standard-required"
                    style={
                      Object {
                        "color": "red",
                        "marginBottom": "1vh",
                      }
                    }
                  >
                    <FormHelperText
                      classes={
                        Object {
                          "contained": "MuiFormHelperText-contained-95",
                          "disabled": "MuiFormHelperText-disabled-93",
                          "error": "MuiFormHelperText-error-92",
                          "filled": "MuiFormHelperText-filled-97",
                          "focused": "MuiFormHelperText-focused-96",
                          "marginDense": "MuiFormHelperText-marginDense-94",
                          "required": "MuiFormHelperText-required-98",
                          "root": "MuiFormHelperText-root-91",
                        }
                      }
                      component="p"
                      htmlFor="standard-required"
                      style={
                        Object {
                          "color": "red",
                          "marginBottom": "1vh",
                        }
                      }
                    >
                      <p
                        className="MuiFormHelperText-root-91"
                        htmlFor="standard-required"
                        style={
                          Object {
                            "color": "red",
                            "marginBottom": "1vh",
                          }
                        }
                      >
                        Required *
                      </p>
                    </FormHelperText>
                  </WithFormControlContext(FormHelperText)>
                </WithStyles(WithFormControlContext(FormHelperText))>
                <WithStyles(WithFormControlContext(FormControlLabel))
                  control={
                    <WithStyles(Checkbox)
                      checked={false}
                      color="primary"
                      id="a1"
                      onChange={[Function]}
                    />
                  }
                  label="Correct Answer"
                  labelPlacement="start"
                  style={
                    Object {
                      "marginLeft": "0",
                    }
                  }
                >
                  <WithFormControlContext(FormControlLabel)
                    classes={
                      Object {
                        "disabled": "MuiFormControlLabel-disabled-103",
                        "label": "MuiFormControlLabel-label-104",
                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-102",
                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-100",
                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-101",
                        "root": "MuiFormControlLabel-root-99",
                      }
                    }
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        id="a1"
                        onChange={[Function]}
                      />
                    }
                    label="Correct Answer"
                    labelPlacement="start"
                    style={
                      Object {
                        "marginLeft": "0",
                      }
                    }
                  >
                    <FormControlLabel
                      classes={
                        Object {
                          "disabled": "MuiFormControlLabel-disabled-103",
                          "label": "MuiFormControlLabel-label-104",
                          "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-102",
                          "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-100",
                          "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-101",
                          "root": "MuiFormControlLabel-root-99",
                        }
                      }
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          id="a1"
                          onChange={[Function]}
                        />
                      }
                      label="Correct Answer"
                      labelPlacement="start"
                      style={
                        Object {
                          "marginLeft": "0",
                        }
                      }
                    >
                      <label
                        className="MuiFormControlLabel-root-99 MuiFormControlLabel-labelPlacementStart-100"
                        style={
                          Object {
                            "marginLeft": "0",
                          }
                        }
                      >
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          id="a1"
                          onChange={[Function]}
                        >
                          <Checkbox
                            checked={false}
                            checkedIcon={<pure(CheckBox) />}
                            classes={
                              Object {
                                "checked": "MuiCheckbox-checked-106",
                                "colorPrimary": "MuiCheckbox-colorPrimary-109",
                                "colorSecondary": "MuiCheckbox-colorSecondary-110",
                                "disabled": "MuiCheckbox-disabled-107",
                                "indeterminate": "MuiCheckbox-indeterminate-108",
                                "root": "MuiCheckbox-root-105",
                              }
                            }
                            color="primary"
                            icon={<pure(CheckBoxOutlineBlank) />}
                            id="a1"
                            indeterminate={false}
                            indeterminateIcon={<pure(IndeterminateCheckBox) />}
                            onChange={[Function]}
                          >
                            <WithStyles(WithFormControlContext(SwitchBase))
                              checked={false}
                              checkedIcon={<pure(CheckBox) />}
                              className=""
                              classes={
                                Object {
                                  "checked": "MuiCheckbox-checked-106",
                                  "disabled": "MuiCheckbox-disabled-107",
                                  "root": "MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                }
                              }
                              icon={<pure(CheckBoxOutlineBlank) />}
                              id="a1"
                              inputProps={
                                Object {
                                  "data-indeterminate": false,
                                }
                              }
                              onChange={[Function]}
                              type="checkbox"
                            >
                              <WithFormControlContext(SwitchBase)
                                checked={false}
                                checkedIcon={<pure(CheckBox) />}
                                className=""
                                classes={
                                  Object {
                                    "checked": "MuiPrivateSwitchBase-checked-112 MuiCheckbox-checked-106",
                                    "disabled": "MuiPrivateSwitchBase-disabled-113 MuiCheckbox-disabled-107",
                                    "input": "MuiPrivateSwitchBase-input-114",
                                    "root": "MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                  }
                                }
                                icon={<pure(CheckBoxOutlineBlank) />}
                                id="a1"
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <SwitchBase
                                  checked={false}
                                  checkedIcon={<pure(CheckBox) />}
                                  className=""
                                  classes={
                                    Object {
                                      "checked": "MuiPrivateSwitchBase-checked-112 MuiCheckbox-checked-106",
                                      "disabled": "MuiPrivateSwitchBase-disabled-113 MuiCheckbox-disabled-107",
                                      "input": "MuiPrivateSwitchBase-input-114",
                                      "root": "MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                    }
                                  }
                                  icon={<pure(CheckBoxOutlineBlank) />}
                                  id="a1"
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(IconButton)
                                    className="MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <IconButton
                                      className="MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit-116",
                                          "colorPrimary": "MuiIconButton-colorPrimary-117",
                                          "colorSecondary": "MuiIconButton-colorSecondary-118",
                                          "disabled": "MuiIconButton-disabled-119",
                                          "label": "MuiIconButton-label-120",
                                          "root": "MuiIconButton-root-115",
                                        }
                                      }
                                      color="default"
                                      component="span"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ButtonBase)
                                        centerRipple={true}
                                        className="MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ButtonBase
                                          centerRipple={true}
                                          className="MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                          classes={
                                            Object {
                                              "disabled": "MuiButtonBase-disabled-55",
                                              "focusVisible": "MuiButtonBase-focusVisible-56",
                                              "root": "MuiButtonBase-root-54",
                                            }
                                          }
                                          component="span"
                                          disableRipple={false}
                                          disableTouchRipple={false}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButtonBase-root-54 MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                            onBlur={[Function]}
                                            onContextMenu={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label-120"
                                            >
                                              <pure(CheckBoxOutlineBlank)>
                                                <CheckBoxOutlineBlank>
                                                  <WithStyles(SvgIcon)>
                                                    <SvgIcon
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction-124",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled-126",
                                                          "colorError": "MuiSvgIcon-colorError-125",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary-122",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary-123",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-127",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-129",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-128",
                                                          "root": "MuiSvgIcon-root-121",
                                                        }
                                                      }
                                                      color="inherit"
                                                      component="svg"
                                                      fontSize="default"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="MuiSvgIcon-root-121"
                                                        focusable="false"
                                                        role="presentation"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </SvgIcon>
                                                  </WithStyles(SvgIcon)>
                                                </CheckBoxOutlineBlank>
                                              </pure(CheckBoxOutlineBlank)>
                                              <input
                                                checked={false}
                                                className="MuiPrivateSwitchBase-input-114"
                                                data-indeterminate={false}
                                                id="a1"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </span>
                                            <NoSsr
                                              defer={false}
                                              fallback={null}
                                            >
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child-170",
                                                      "childLeaving": "MuiTouchRipple-childLeaving-171",
                                                      "childPulsate": "MuiTouchRipple-childPulsate-172",
                                                      "ripple": "MuiTouchRipple-ripple-167",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-169",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-168",
                                                      "root": "MuiTouchRipple-root-166",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-166"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-166"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </span>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </IconButton>
                                  </WithStyles(IconButton)>
                                </SwitchBase>
                              </WithFormControlContext(SwitchBase)>
                            </WithStyles(WithFormControlContext(SwitchBase))>
                          </Checkbox>
                        </WithStyles(Checkbox)>
                        <WithStyles(Typography)
                          className="MuiFormControlLabel-label-104"
                          component="span"
                        >
                          <Typography
                            align="inherit"
                            className="MuiFormControlLabel-label-104"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter-153",
                                "alignJustify": "MuiTypography-alignJustify-155",
                                "alignLeft": "MuiTypography-alignLeft-152",
                                "alignRight": "MuiTypography-alignRight-154",
                                "body1": "MuiTypography-body1-139",
                                "body2": "MuiTypography-body2-138",
                                "button": "MuiTypography-button-141",
                                "caption": "MuiTypography-caption-140",
                                "colorError": "MuiTypography-colorError-164",
                                "colorInherit": "MuiTypography-colorInherit-159",
                                "colorPrimary": "MuiTypography-colorPrimary-160",
                                "colorSecondary": "MuiTypography-colorSecondary-161",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary-162",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary-163",
                                "display1": "MuiTypography-display1-134",
                                "display2": "MuiTypography-display2-133",
                                "display3": "MuiTypography-display3-132",
                                "display4": "MuiTypography-display4-131",
                                "gutterBottom": "MuiTypography-gutterBottom-157",
                                "h1": "MuiTypography-h1-142",
                                "h2": "MuiTypography-h2-143",
                                "h3": "MuiTypography-h3-144",
                                "h4": "MuiTypography-h4-145",
                                "h5": "MuiTypography-h5-146",
                                "h6": "MuiTypography-h6-147",
                                "headline": "MuiTypography-headline-135",
                                "inline": "MuiTypography-inline-165",
                                "noWrap": "MuiTypography-noWrap-156",
                                "overline": "MuiTypography-overline-150",
                                "paragraph": "MuiTypography-paragraph-158",
                                "root": "MuiTypography-root-130",
                                "srOnly": "MuiTypography-srOnly-151",
                                "subheading": "MuiTypography-subheading-137",
                                "subtitle1": "MuiTypography-subtitle1-148",
                                "subtitle2": "MuiTypography-subtitle2-149",
                                "title": "MuiTypography-title-136",
                              }
                            }
                            color="default"
                            component="span"
                            gutterBottom={false}
                            headlineMapping={
                              Object {
                                "body1": "p",
                                "body2": "p",
                                "display1": "h1",
                                "display2": "h1",
                                "display3": "h1",
                                "display4": "h1",
                                "h1": "h1",
                                "h2": "h2",
                                "h3": "h3",
                                "h4": "h4",
                                "h5": "h5",
                                "h6": "h6",
                                "headline": "h1",
                                "subheading": "h3",
                                "subtitle1": "h6",
                                "subtitle2": "h6",
                                "title": "h2",
                              }
                            }
                            inline={false}
                            noWrap={false}
                            paragraph={false}
                            theme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": Object {
                                  "unit": 8,
                                },
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.46429em",
                                  },
                                  "body1Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.71429em",
                                  },
                                  "body2Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "button": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "textTransform": "uppercase",
                                  },
                                  "buttonNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.375em",
                                  },
                                  "captionNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "display1": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.20588em",
                                  },
                                  "display2": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.8125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.13333em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display3": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "-.02em",
                                    "lineHeight": "1.30357em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display4": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "7rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-.04em",
                                    "lineHeight": "1.14286em",
                                    "marginLeft": "-.04em",
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1,
                                  },
                                  "h2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1,
                                  },
                                  "h3": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.04,
                                  },
                                  "h4": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.17,
                                  },
                                  "h5": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.33,
                                  },
                                  "h6": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "headline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.35417em",
                                  },
                                  "overline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subheading": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.5em",
                                  },
                                  "subtitle1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                  "title": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.3125rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.16667em",
                                  },
                                  "useNextVariants": false,
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "tooltip": 1500,
                                },
                              }
                            }
                          >
                            <span
                              className="MuiTypography-root-130 MuiTypography-body1-139 MuiFormControlLabel-label-104"
                            >
                              Correct Answer
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                      </label>
                    </FormControlLabel>
                  </WithFormControlContext(FormControlLabel)>
                </WithStyles(WithFormControlContext(FormControlLabel))>
                <TextField
                  fullWidth={true}
                  margin="normal"
                  onChange={[Function]}
                  placeholder="Answer 2"
                  required={false}
                  select={false}
                  type="text"
                  value=""
                  variant="standard"
                >
                  <WithStyles(FormControl)
                    fullWidth={true}
                    margin="normal"
                    required={false}
                    variant="standard"
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-60",
                          "marginDense": "MuiFormControl-marginDense-59",
                          "marginNormal": "MuiFormControl-marginNormal-58",
                          "root": "MuiFormControl-root-57",
                        }
                      }
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root-57 MuiFormControl-marginNormal-58 MuiFormControl-fullWidth-60"
                      >
                        <WithStyles(Input)
                          fullWidth={true}
                          onChange={[Function]}
                          placeholder="Answer 2"
                          type="text"
                          value=""
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-64",
                                "error": "MuiInput-error-66",
                                "focused": "MuiInput-focused-63",
                                "formControl": "MuiInput-formControl-62",
                                "fullWidth": "MuiInput-fullWidth-68",
                                "input": "MuiInput-input-69",
                                "inputMarginDense": "MuiInput-inputMarginDense-70",
                                "inputMultiline": "MuiInput-inputMultiline-71",
                                "inputType": "MuiInput-inputType-72",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                "multiline": "MuiInput-multiline-67",
                                "root": "MuiInput-root-61",
                                "underline": "MuiInput-underline-65",
                              }
                            }
                            fullWidth={true}
                            onChange={[Function]}
                            placeholder="Answer 2"
                            type="text"
                            value=""
                          >
                            <WithStyles(WithFormControlContext(InputBase))
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-64",
                                  "error": "MuiInput-error-66",
                                  "focused": "MuiInput-focused-63",
                                  "formControl": "MuiInput-formControl-62",
                                  "fullWidth": "MuiInput-fullWidth-68",
                                  "input": "MuiInput-input-69",
                                  "inputMarginDense": "MuiInput-inputMarginDense-70",
                                  "inputMultiline": "MuiInput-inputMultiline-71",
                                  "inputType": "MuiInput-inputType-72",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                  "multiline": "MuiInput-multiline-67",
                                  "root": "MuiInput-root-61 MuiInput-underline-65",
                                  "underline": null,
                                }
                              }
                              fullWidth={true}
                              inputComponent="input"
                              multiline={false}
                              onChange={[Function]}
                              placeholder="Answer 2"
                              type="text"
                              value=""
                            >
                              <WithFormControlContext(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd-79",
                                    "adornedStart": "MuiInputBase-adornedStart-78",
                                    "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                    "error": "MuiInputBase-error-80 MuiInput-error-66",
                                    "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                    "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                    "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                    "input": "MuiInputBase-input-84 MuiInput-input-69",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                    "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                    "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                    "marginDense": "MuiInputBase-marginDense-81",
                                    "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                    "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                  }
                                }
                                fullWidth={true}
                                inputComponent="input"
                                multiline={false}
                                onChange={[Function]}
                                placeholder="Answer 2"
                                type="text"
                                value=""
                              >
                                <InputBase
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-79",
                                      "adornedStart": "MuiInputBase-adornedStart-78",
                                      "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                      "error": "MuiInputBase-error-80 MuiInput-error-66",
                                      "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                      "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                      "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                      "input": "MuiInputBase-input-84 MuiInput-input-69",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                      "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                      "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                      "marginDense": "MuiInputBase-marginDense-81",
                                      "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                      "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  placeholder="Answer 2"
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65 MuiInputBase-fullWidth-83 MuiInput-fullWidth-68 MuiInputBase-formControl-75 MuiInput-formControl-62"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-invalid={false}
                                      className="MuiInputBase-input-84 MuiInput-input-69"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="Answer 2"
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </InputBase>
                              </WithFormControlContext(InputBase)>
                            </WithStyles(WithFormControlContext(InputBase))>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
                <WithStyles(WithFormControlContext(FormControlLabel))
                  control={
                    <WithStyles(Checkbox)
                      checked={false}
                      color="primary"
                      id="a2"
                      onChange={[Function]}
                    />
                  }
                  label="Correct Answer"
                  labelPlacement="start"
                  style={
                    Object {
                      "marginLeft": "0",
                    }
                  }
                >
                  <WithFormControlContext(FormControlLabel)
                    classes={
                      Object {
                        "disabled": "MuiFormControlLabel-disabled-103",
                        "label": "MuiFormControlLabel-label-104",
                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-102",
                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-100",
                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-101",
                        "root": "MuiFormControlLabel-root-99",
                      }
                    }
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        id="a2"
                        onChange={[Function]}
                      />
                    }
                    label="Correct Answer"
                    labelPlacement="start"
                    style={
                      Object {
                        "marginLeft": "0",
                      }
                    }
                  >
                    <FormControlLabel
                      classes={
                        Object {
                          "disabled": "MuiFormControlLabel-disabled-103",
                          "label": "MuiFormControlLabel-label-104",
                          "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-102",
                          "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-100",
                          "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-101",
                          "root": "MuiFormControlLabel-root-99",
                        }
                      }
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          id="a2"
                          onChange={[Function]}
                        />
                      }
                      label="Correct Answer"
                      labelPlacement="start"
                      style={
                        Object {
                          "marginLeft": "0",
                        }
                      }
                    >
                      <label
                        className="MuiFormControlLabel-root-99 MuiFormControlLabel-labelPlacementStart-100"
                        style={
                          Object {
                            "marginLeft": "0",
                          }
                        }
                      >
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          id="a2"
                          onChange={[Function]}
                        >
                          <Checkbox
                            checked={false}
                            checkedIcon={<pure(CheckBox) />}
                            classes={
                              Object {
                                "checked": "MuiCheckbox-checked-106",
                                "colorPrimary": "MuiCheckbox-colorPrimary-109",
                                "colorSecondary": "MuiCheckbox-colorSecondary-110",
                                "disabled": "MuiCheckbox-disabled-107",
                                "indeterminate": "MuiCheckbox-indeterminate-108",
                                "root": "MuiCheckbox-root-105",
                              }
                            }
                            color="primary"
                            icon={<pure(CheckBoxOutlineBlank) />}
                            id="a2"
                            indeterminate={false}
                            indeterminateIcon={<pure(IndeterminateCheckBox) />}
                            onChange={[Function]}
                          >
                            <WithStyles(WithFormControlContext(SwitchBase))
                              checked={false}
                              checkedIcon={<pure(CheckBox) />}
                              className=""
                              classes={
                                Object {
                                  "checked": "MuiCheckbox-checked-106",
                                  "disabled": "MuiCheckbox-disabled-107",
                                  "root": "MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                }
                              }
                              icon={<pure(CheckBoxOutlineBlank) />}
                              id="a2"
                              inputProps={
                                Object {
                                  "data-indeterminate": false,
                                }
                              }
                              onChange={[Function]}
                              type="checkbox"
                            >
                              <WithFormControlContext(SwitchBase)
                                checked={false}
                                checkedIcon={<pure(CheckBox) />}
                                className=""
                                classes={
                                  Object {
                                    "checked": "MuiPrivateSwitchBase-checked-112 MuiCheckbox-checked-106",
                                    "disabled": "MuiPrivateSwitchBase-disabled-113 MuiCheckbox-disabled-107",
                                    "input": "MuiPrivateSwitchBase-input-114",
                                    "root": "MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                  }
                                }
                                icon={<pure(CheckBoxOutlineBlank) />}
                                id="a2"
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <SwitchBase
                                  checked={false}
                                  checkedIcon={<pure(CheckBox) />}
                                  className=""
                                  classes={
                                    Object {
                                      "checked": "MuiPrivateSwitchBase-checked-112 MuiCheckbox-checked-106",
                                      "disabled": "MuiPrivateSwitchBase-disabled-113 MuiCheckbox-disabled-107",
                                      "input": "MuiPrivateSwitchBase-input-114",
                                      "root": "MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                    }
                                  }
                                  icon={<pure(CheckBoxOutlineBlank) />}
                                  id="a2"
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(IconButton)
                                    className="MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <IconButton
                                      className="MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit-116",
                                          "colorPrimary": "MuiIconButton-colorPrimary-117",
                                          "colorSecondary": "MuiIconButton-colorSecondary-118",
                                          "disabled": "MuiIconButton-disabled-119",
                                          "label": "MuiIconButton-label-120",
                                          "root": "MuiIconButton-root-115",
                                        }
                                      }
                                      color="default"
                                      component="span"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ButtonBase)
                                        centerRipple={true}
                                        className="MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ButtonBase
                                          centerRipple={true}
                                          className="MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                          classes={
                                            Object {
                                              "disabled": "MuiButtonBase-disabled-55",
                                              "focusVisible": "MuiButtonBase-focusVisible-56",
                                              "root": "MuiButtonBase-root-54",
                                            }
                                          }
                                          component="span"
                                          disableRipple={false}
                                          disableTouchRipple={false}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButtonBase-root-54 MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                            onBlur={[Function]}
                                            onContextMenu={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label-120"
                                            >
                                              <pure(CheckBoxOutlineBlank)>
                                                <CheckBoxOutlineBlank>
                                                  <WithStyles(SvgIcon)>
                                                    <SvgIcon
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction-124",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled-126",
                                                          "colorError": "MuiSvgIcon-colorError-125",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary-122",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary-123",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-127",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-129",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-128",
                                                          "root": "MuiSvgIcon-root-121",
                                                        }
                                                      }
                                                      color="inherit"
                                                      component="svg"
                                                      fontSize="default"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="MuiSvgIcon-root-121"
                                                        focusable="false"
                                                        role="presentation"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </SvgIcon>
                                                  </WithStyles(SvgIcon)>
                                                </CheckBoxOutlineBlank>
                                              </pure(CheckBoxOutlineBlank)>
                                              <input
                                                checked={false}
                                                className="MuiPrivateSwitchBase-input-114"
                                                data-indeterminate={false}
                                                id="a2"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </span>
                                            <NoSsr
                                              defer={false}
                                              fallback={null}
                                            >
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child-170",
                                                      "childLeaving": "MuiTouchRipple-childLeaving-171",
                                                      "childPulsate": "MuiTouchRipple-childPulsate-172",
                                                      "ripple": "MuiTouchRipple-ripple-167",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-169",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-168",
                                                      "root": "MuiTouchRipple-root-166",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-166"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-166"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </span>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </IconButton>
                                  </WithStyles(IconButton)>
                                </SwitchBase>
                              </WithFormControlContext(SwitchBase)>
                            </WithStyles(WithFormControlContext(SwitchBase))>
                          </Checkbox>
                        </WithStyles(Checkbox)>
                        <WithStyles(Typography)
                          className="MuiFormControlLabel-label-104"
                          component="span"
                        >
                          <Typography
                            align="inherit"
                            className="MuiFormControlLabel-label-104"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter-153",
                                "alignJustify": "MuiTypography-alignJustify-155",
                                "alignLeft": "MuiTypography-alignLeft-152",
                                "alignRight": "MuiTypography-alignRight-154",
                                "body1": "MuiTypography-body1-139",
                                "body2": "MuiTypography-body2-138",
                                "button": "MuiTypography-button-141",
                                "caption": "MuiTypography-caption-140",
                                "colorError": "MuiTypography-colorError-164",
                                "colorInherit": "MuiTypography-colorInherit-159",
                                "colorPrimary": "MuiTypography-colorPrimary-160",
                                "colorSecondary": "MuiTypography-colorSecondary-161",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary-162",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary-163",
                                "display1": "MuiTypography-display1-134",
                                "display2": "MuiTypography-display2-133",
                                "display3": "MuiTypography-display3-132",
                                "display4": "MuiTypography-display4-131",
                                "gutterBottom": "MuiTypography-gutterBottom-157",
                                "h1": "MuiTypography-h1-142",
                                "h2": "MuiTypography-h2-143",
                                "h3": "MuiTypography-h3-144",
                                "h4": "MuiTypography-h4-145",
                                "h5": "MuiTypography-h5-146",
                                "h6": "MuiTypography-h6-147",
                                "headline": "MuiTypography-headline-135",
                                "inline": "MuiTypography-inline-165",
                                "noWrap": "MuiTypography-noWrap-156",
                                "overline": "MuiTypography-overline-150",
                                "paragraph": "MuiTypography-paragraph-158",
                                "root": "MuiTypography-root-130",
                                "srOnly": "MuiTypography-srOnly-151",
                                "subheading": "MuiTypography-subheading-137",
                                "subtitle1": "MuiTypography-subtitle1-148",
                                "subtitle2": "MuiTypography-subtitle2-149",
                                "title": "MuiTypography-title-136",
                              }
                            }
                            color="default"
                            component="span"
                            gutterBottom={false}
                            headlineMapping={
                              Object {
                                "body1": "p",
                                "body2": "p",
                                "display1": "h1",
                                "display2": "h1",
                                "display3": "h1",
                                "display4": "h1",
                                "h1": "h1",
                                "h2": "h2",
                                "h3": "h3",
                                "h4": "h4",
                                "h5": "h5",
                                "h6": "h6",
                                "headline": "h1",
                                "subheading": "h3",
                                "subtitle1": "h6",
                                "subtitle2": "h6",
                                "title": "h2",
                              }
                            }
                            inline={false}
                            noWrap={false}
                            paragraph={false}
                            theme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": Object {
                                  "unit": 8,
                                },
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.46429em",
                                  },
                                  "body1Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.71429em",
                                  },
                                  "body2Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "button": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "textTransform": "uppercase",
                                  },
                                  "buttonNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.375em",
                                  },
                                  "captionNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "display1": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.20588em",
                                  },
                                  "display2": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.8125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.13333em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display3": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "-.02em",
                                    "lineHeight": "1.30357em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display4": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "7rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-.04em",
                                    "lineHeight": "1.14286em",
                                    "marginLeft": "-.04em",
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1,
                                  },
                                  "h2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1,
                                  },
                                  "h3": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.04,
                                  },
                                  "h4": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.17,
                                  },
                                  "h5": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.33,
                                  },
                                  "h6": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "headline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.35417em",
                                  },
                                  "overline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subheading": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.5em",
                                  },
                                  "subtitle1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                  "title": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.3125rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.16667em",
                                  },
                                  "useNextVariants": false,
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "tooltip": 1500,
                                },
                              }
                            }
                          >
                            <span
                              className="MuiTypography-root-130 MuiTypography-body1-139 MuiFormControlLabel-label-104"
                            >
                              Correct Answer
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                      </label>
                    </FormControlLabel>
                  </WithFormControlContext(FormControlLabel)>
                </WithStyles(WithFormControlContext(FormControlLabel))>
                <TextField
                  fullWidth={true}
                  margin="normal"
                  onChange={[Function]}
                  placeholder="Answer 3"
                  required={false}
                  select={false}
                  type="text"
                  value=""
                  variant="standard"
                >
                  <WithStyles(FormControl)
                    fullWidth={true}
                    margin="normal"
                    required={false}
                    variant="standard"
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-60",
                          "marginDense": "MuiFormControl-marginDense-59",
                          "marginNormal": "MuiFormControl-marginNormal-58",
                          "root": "MuiFormControl-root-57",
                        }
                      }
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root-57 MuiFormControl-marginNormal-58 MuiFormControl-fullWidth-60"
                      >
                        <WithStyles(Input)
                          fullWidth={true}
                          onChange={[Function]}
                          placeholder="Answer 3"
                          type="text"
                          value=""
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-64",
                                "error": "MuiInput-error-66",
                                "focused": "MuiInput-focused-63",
                                "formControl": "MuiInput-formControl-62",
                                "fullWidth": "MuiInput-fullWidth-68",
                                "input": "MuiInput-input-69",
                                "inputMarginDense": "MuiInput-inputMarginDense-70",
                                "inputMultiline": "MuiInput-inputMultiline-71",
                                "inputType": "MuiInput-inputType-72",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                "multiline": "MuiInput-multiline-67",
                                "root": "MuiInput-root-61",
                                "underline": "MuiInput-underline-65",
                              }
                            }
                            fullWidth={true}
                            onChange={[Function]}
                            placeholder="Answer 3"
                            type="text"
                            value=""
                          >
                            <WithStyles(WithFormControlContext(InputBase))
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-64",
                                  "error": "MuiInput-error-66",
                                  "focused": "MuiInput-focused-63",
                                  "formControl": "MuiInput-formControl-62",
                                  "fullWidth": "MuiInput-fullWidth-68",
                                  "input": "MuiInput-input-69",
                                  "inputMarginDense": "MuiInput-inputMarginDense-70",
                                  "inputMultiline": "MuiInput-inputMultiline-71",
                                  "inputType": "MuiInput-inputType-72",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                  "multiline": "MuiInput-multiline-67",
                                  "root": "MuiInput-root-61 MuiInput-underline-65",
                                  "underline": null,
                                }
                              }
                              fullWidth={true}
                              inputComponent="input"
                              multiline={false}
                              onChange={[Function]}
                              placeholder="Answer 3"
                              type="text"
                              value=""
                            >
                              <WithFormControlContext(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd-79",
                                    "adornedStart": "MuiInputBase-adornedStart-78",
                                    "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                    "error": "MuiInputBase-error-80 MuiInput-error-66",
                                    "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                    "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                    "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                    "input": "MuiInputBase-input-84 MuiInput-input-69",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                    "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                    "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                    "marginDense": "MuiInputBase-marginDense-81",
                                    "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                    "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                  }
                                }
                                fullWidth={true}
                                inputComponent="input"
                                multiline={false}
                                onChange={[Function]}
                                placeholder="Answer 3"
                                type="text"
                                value=""
                              >
                                <InputBase
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-79",
                                      "adornedStart": "MuiInputBase-adornedStart-78",
                                      "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                      "error": "MuiInputBase-error-80 MuiInput-error-66",
                                      "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                      "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                      "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                      "input": "MuiInputBase-input-84 MuiInput-input-69",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                      "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                      "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                      "marginDense": "MuiInputBase-marginDense-81",
                                      "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                      "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  placeholder="Answer 3"
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65 MuiInputBase-fullWidth-83 MuiInput-fullWidth-68 MuiInputBase-formControl-75 MuiInput-formControl-62"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-invalid={false}
                                      className="MuiInputBase-input-84 MuiInput-input-69"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="Answer 3"
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </InputBase>
                              </WithFormControlContext(InputBase)>
                            </WithStyles(WithFormControlContext(InputBase))>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
                <WithStyles(WithFormControlContext(FormControlLabel))
                  control={
                    <WithStyles(Checkbox)
                      checked={false}
                      color="primary"
                      id="a3"
                      onChange={[Function]}
                    />
                  }
                  label="Correct Answer"
                  labelPlacement="start"
                  style={
                    Object {
                      "marginLeft": "0",
                    }
                  }
                >
                  <WithFormControlContext(FormControlLabel)
                    classes={
                      Object {
                        "disabled": "MuiFormControlLabel-disabled-103",
                        "label": "MuiFormControlLabel-label-104",
                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-102",
                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-100",
                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-101",
                        "root": "MuiFormControlLabel-root-99",
                      }
                    }
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        id="a3"
                        onChange={[Function]}
                      />
                    }
                    label="Correct Answer"
                    labelPlacement="start"
                    style={
                      Object {
                        "marginLeft": "0",
                      }
                    }
                  >
                    <FormControlLabel
                      classes={
                        Object {
                          "disabled": "MuiFormControlLabel-disabled-103",
                          "label": "MuiFormControlLabel-label-104",
                          "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom-102",
                          "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart-100",
                          "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop-101",
                          "root": "MuiFormControlLabel-root-99",
                        }
                      }
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          id="a3"
                          onChange={[Function]}
                        />
                      }
                      label="Correct Answer"
                      labelPlacement="start"
                      style={
                        Object {
                          "marginLeft": "0",
                        }
                      }
                    >
                      <label
                        className="MuiFormControlLabel-root-99 MuiFormControlLabel-labelPlacementStart-100"
                        style={
                          Object {
                            "marginLeft": "0",
                          }
                        }
                      >
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          id="a3"
                          onChange={[Function]}
                        >
                          <Checkbox
                            checked={false}
                            checkedIcon={<pure(CheckBox) />}
                            classes={
                              Object {
                                "checked": "MuiCheckbox-checked-106",
                                "colorPrimary": "MuiCheckbox-colorPrimary-109",
                                "colorSecondary": "MuiCheckbox-colorSecondary-110",
                                "disabled": "MuiCheckbox-disabled-107",
                                "indeterminate": "MuiCheckbox-indeterminate-108",
                                "root": "MuiCheckbox-root-105",
                              }
                            }
                            color="primary"
                            icon={<pure(CheckBoxOutlineBlank) />}
                            id="a3"
                            indeterminate={false}
                            indeterminateIcon={<pure(IndeterminateCheckBox) />}
                            onChange={[Function]}
                          >
                            <WithStyles(WithFormControlContext(SwitchBase))
                              checked={false}
                              checkedIcon={<pure(CheckBox) />}
                              className=""
                              classes={
                                Object {
                                  "checked": "MuiCheckbox-checked-106",
                                  "disabled": "MuiCheckbox-disabled-107",
                                  "root": "MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                }
                              }
                              icon={<pure(CheckBoxOutlineBlank) />}
                              id="a3"
                              inputProps={
                                Object {
                                  "data-indeterminate": false,
                                }
                              }
                              onChange={[Function]}
                              type="checkbox"
                            >
                              <WithFormControlContext(SwitchBase)
                                checked={false}
                                checkedIcon={<pure(CheckBox) />}
                                className=""
                                classes={
                                  Object {
                                    "checked": "MuiPrivateSwitchBase-checked-112 MuiCheckbox-checked-106",
                                    "disabled": "MuiPrivateSwitchBase-disabled-113 MuiCheckbox-disabled-107",
                                    "input": "MuiPrivateSwitchBase-input-114",
                                    "root": "MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                  }
                                }
                                icon={<pure(CheckBoxOutlineBlank) />}
                                id="a3"
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <SwitchBase
                                  checked={false}
                                  checkedIcon={<pure(CheckBox) />}
                                  className=""
                                  classes={
                                    Object {
                                      "checked": "MuiPrivateSwitchBase-checked-112 MuiCheckbox-checked-106",
                                      "disabled": "MuiPrivateSwitchBase-disabled-113 MuiCheckbox-disabled-107",
                                      "input": "MuiPrivateSwitchBase-input-114",
                                      "root": "MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109",
                                    }
                                  }
                                  icon={<pure(CheckBoxOutlineBlank) />}
                                  id="a3"
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(IconButton)
                                    className="MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <IconButton
                                      className="MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit-116",
                                          "colorPrimary": "MuiIconButton-colorPrimary-117",
                                          "colorSecondary": "MuiIconButton-colorSecondary-118",
                                          "disabled": "MuiIconButton-disabled-119",
                                          "label": "MuiIconButton-label-120",
                                          "root": "MuiIconButton-root-115",
                                        }
                                      }
                                      color="default"
                                      component="span"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ButtonBase)
                                        centerRipple={true}
                                        className="MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ButtonBase
                                          centerRipple={true}
                                          className="MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                          classes={
                                            Object {
                                              "disabled": "MuiButtonBase-disabled-55",
                                              "focusVisible": "MuiButtonBase-focusVisible-56",
                                              "root": "MuiButtonBase-root-54",
                                            }
                                          }
                                          component="span"
                                          disableRipple={false}
                                          disableTouchRipple={false}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButtonBase-root-54 MuiIconButton-root-115 MuiPrivateSwitchBase-root-111 MuiCheckbox-root-105 MuiCheckbox-colorPrimary-109"
                                            onBlur={[Function]}
                                            onContextMenu={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label-120"
                                            >
                                              <pure(CheckBoxOutlineBlank)>
                                                <CheckBoxOutlineBlank>
                                                  <WithStyles(SvgIcon)>
                                                    <SvgIcon
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction-124",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled-126",
                                                          "colorError": "MuiSvgIcon-colorError-125",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary-122",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary-123",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-127",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-129",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-128",
                                                          "root": "MuiSvgIcon-root-121",
                                                        }
                                                      }
                                                      color="inherit"
                                                      component="svg"
                                                      fontSize="default"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="MuiSvgIcon-root-121"
                                                        focusable="false"
                                                        role="presentation"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </SvgIcon>
                                                  </WithStyles(SvgIcon)>
                                                </CheckBoxOutlineBlank>
                                              </pure(CheckBoxOutlineBlank)>
                                              <input
                                                checked={false}
                                                className="MuiPrivateSwitchBase-input-114"
                                                data-indeterminate={false}
                                                id="a3"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </span>
                                            <NoSsr
                                              defer={false}
                                              fallback={null}
                                            >
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child-170",
                                                      "childLeaving": "MuiTouchRipple-childLeaving-171",
                                                      "childPulsate": "MuiTouchRipple-childPulsate-172",
                                                      "ripple": "MuiTouchRipple-ripple-167",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-169",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-168",
                                                      "root": "MuiTouchRipple-root-166",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-166"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-166"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </span>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </IconButton>
                                  </WithStyles(IconButton)>
                                </SwitchBase>
                              </WithFormControlContext(SwitchBase)>
                            </WithStyles(WithFormControlContext(SwitchBase))>
                          </Checkbox>
                        </WithStyles(Checkbox)>
                        <WithStyles(Typography)
                          className="MuiFormControlLabel-label-104"
                          component="span"
                        >
                          <Typography
                            align="inherit"
                            className="MuiFormControlLabel-label-104"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter-153",
                                "alignJustify": "MuiTypography-alignJustify-155",
                                "alignLeft": "MuiTypography-alignLeft-152",
                                "alignRight": "MuiTypography-alignRight-154",
                                "body1": "MuiTypography-body1-139",
                                "body2": "MuiTypography-body2-138",
                                "button": "MuiTypography-button-141",
                                "caption": "MuiTypography-caption-140",
                                "colorError": "MuiTypography-colorError-164",
                                "colorInherit": "MuiTypography-colorInherit-159",
                                "colorPrimary": "MuiTypography-colorPrimary-160",
                                "colorSecondary": "MuiTypography-colorSecondary-161",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary-162",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary-163",
                                "display1": "MuiTypography-display1-134",
                                "display2": "MuiTypography-display2-133",
                                "display3": "MuiTypography-display3-132",
                                "display4": "MuiTypography-display4-131",
                                "gutterBottom": "MuiTypography-gutterBottom-157",
                                "h1": "MuiTypography-h1-142",
                                "h2": "MuiTypography-h2-143",
                                "h3": "MuiTypography-h3-144",
                                "h4": "MuiTypography-h4-145",
                                "h5": "MuiTypography-h5-146",
                                "h6": "MuiTypography-h6-147",
                                "headline": "MuiTypography-headline-135",
                                "inline": "MuiTypography-inline-165",
                                "noWrap": "MuiTypography-noWrap-156",
                                "overline": "MuiTypography-overline-150",
                                "paragraph": "MuiTypography-paragraph-158",
                                "root": "MuiTypography-root-130",
                                "srOnly": "MuiTypography-srOnly-151",
                                "subheading": "MuiTypography-subheading-137",
                                "subtitle1": "MuiTypography-subtitle1-148",
                                "subtitle2": "MuiTypography-subtitle2-149",
                                "title": "MuiTypography-title-136",
                              }
                            }
                            color="default"
                            component="span"
                            gutterBottom={false}
                            headlineMapping={
                              Object {
                                "body1": "p",
                                "body2": "p",
                                "display1": "h1",
                                "display2": "h1",
                                "display3": "h1",
                                "display4": "h1",
                                "h1": "h1",
                                "h2": "h2",
                                "h3": "h3",
                                "h4": "h4",
                                "h5": "h5",
                                "h6": "h6",
                                "headline": "h1",
                                "subheading": "h3",
                                "subtitle1": "h6",
                                "subtitle2": "h6",
                                "title": "h2",
                              }
                            }
                            inline={false}
                            noWrap={false}
                            paragraph={false}
                            theme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": Object {
                                  "unit": 8,
                                },
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.46429em",
                                  },
                                  "body1Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.71429em",
                                  },
                                  "body2Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "button": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "textTransform": "uppercase",
                                  },
                                  "buttonNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.375em",
                                  },
                                  "captionNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "display1": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.20588em",
                                  },
                                  "display2": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.8125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.13333em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display3": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "-.02em",
                                    "lineHeight": "1.30357em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display4": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "7rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-.04em",
                                    "lineHeight": "1.14286em",
                                    "marginLeft": "-.04em",
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1,
                                  },
                                  "h2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1,
                                  },
                                  "h3": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.04,
                                  },
                                  "h4": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.17,
                                  },
                                  "h5": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.33,
                                  },
                                  "h6": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "headline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.35417em",
                                  },
                                  "overline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subheading": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.5em",
                                  },
                                  "subtitle1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                  "title": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.3125rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.16667em",
                                  },
                                  "useNextVariants": false,
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "tooltip": 1500,
                                },
                              }
                            }
                          >
                            <span
                              className="MuiTypography-root-130 MuiTypography-body1-139 MuiFormControlLabel-label-104"
                            >
                              Correct Answer
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                      </label>
                    </FormControlLabel>
                  </WithFormControlContext(FormControlLabel)>
                </WithStyles(WithFormControlContext(FormControlLabel))>
                <TextField
                  fullWidth={true}
                  id="standard-required"
                  margin="normal"
                  onChange={[Function]}
                  placeholder="Please provide a link to a source verifying that this information is correct."
                  required={false}
                  select={false}
                  style={
                    Object {
                      "marginTop": "5vh",
                    }
                  }
                  type="text"
                  value=""
                  variant="standard"
                >
                  <WithStyles(FormControl)
                    fullWidth={true}
                    margin="normal"
                    required={false}
                    style={
                      Object {
                        "marginTop": "5vh",
                      }
                    }
                    variant="standard"
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-60",
                          "marginDense": "MuiFormControl-marginDense-59",
                          "marginNormal": "MuiFormControl-marginNormal-58",
                          "root": "MuiFormControl-root-57",
                        }
                      }
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      style={
                        Object {
                          "marginTop": "5vh",
                        }
                      }
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root-57 MuiFormControl-marginNormal-58 MuiFormControl-fullWidth-60"
                        style={
                          Object {
                            "marginTop": "5vh",
                          }
                        }
                      >
                        <WithStyles(Input)
                          fullWidth={true}
                          id="standard-required"
                          onChange={[Function]}
                          placeholder="Please provide a link to a source verifying that this information is correct."
                          type="text"
                          value=""
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-64",
                                "error": "MuiInput-error-66",
                                "focused": "MuiInput-focused-63",
                                "formControl": "MuiInput-formControl-62",
                                "fullWidth": "MuiInput-fullWidth-68",
                                "input": "MuiInput-input-69",
                                "inputMarginDense": "MuiInput-inputMarginDense-70",
                                "inputMultiline": "MuiInput-inputMultiline-71",
                                "inputType": "MuiInput-inputType-72",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                "multiline": "MuiInput-multiline-67",
                                "root": "MuiInput-root-61",
                                "underline": "MuiInput-underline-65",
                              }
                            }
                            fullWidth={true}
                            id="standard-required"
                            onChange={[Function]}
                            placeholder="Please provide a link to a source verifying that this information is correct."
                            type="text"
                            value=""
                          >
                            <WithStyles(WithFormControlContext(InputBase))
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-64",
                                  "error": "MuiInput-error-66",
                                  "focused": "MuiInput-focused-63",
                                  "formControl": "MuiInput-formControl-62",
                                  "fullWidth": "MuiInput-fullWidth-68",
                                  "input": "MuiInput-input-69",
                                  "inputMarginDense": "MuiInput-inputMarginDense-70",
                                  "inputMultiline": "MuiInput-inputMultiline-71",
                                  "inputType": "MuiInput-inputType-72",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-73",
                                  "multiline": "MuiInput-multiline-67",
                                  "root": "MuiInput-root-61 MuiInput-underline-65",
                                  "underline": null,
                                }
                              }
                              fullWidth={true}
                              id="standard-required"
                              inputComponent="input"
                              multiline={false}
                              onChange={[Function]}
                              placeholder="Please provide a link to a source verifying that this information is correct."
                              type="text"
                              value=""
                            >
                              <WithFormControlContext(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd-79",
                                    "adornedStart": "MuiInputBase-adornedStart-78",
                                    "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                    "error": "MuiInputBase-error-80 MuiInput-error-66",
                                    "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                    "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                    "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                    "input": "MuiInputBase-input-84 MuiInput-input-69",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                    "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                    "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                    "marginDense": "MuiInputBase-marginDense-81",
                                    "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                    "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                  }
                                }
                                fullWidth={true}
                                id="standard-required"
                                inputComponent="input"
                                multiline={false}
                                onChange={[Function]}
                                placeholder="Please provide a link to a source verifying that this information is correct."
                                type="text"
                                value=""
                              >
                                <InputBase
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-79",
                                      "adornedStart": "MuiInputBase-adornedStart-78",
                                      "disabled": "MuiInputBase-disabled-77 MuiInput-disabled-64",
                                      "error": "MuiInputBase-error-80 MuiInput-error-66",
                                      "focused": "MuiInputBase-focused-76 MuiInput-focused-63",
                                      "formControl": "MuiInputBase-formControl-75 MuiInput-formControl-62",
                                      "fullWidth": "MuiInputBase-fullWidth-83 MuiInput-fullWidth-68",
                                      "input": "MuiInputBase-input-84 MuiInput-input-69",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-90",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-89",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-85 MuiInput-inputMarginDense-70",
                                      "inputMultiline": "MuiInputBase-inputMultiline-86 MuiInput-inputMultiline-71",
                                      "inputType": "MuiInputBase-inputType-87 MuiInput-inputType-72",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-88 MuiInput-inputTypeSearch-73",
                                      "marginDense": "MuiInputBase-marginDense-81",
                                      "multiline": "MuiInputBase-multiline-82 MuiInput-multiline-67",
                                      "root": "MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65",
                                    }
                                  }
                                  fullWidth={true}
                                  id="standard-required"
                                  inputComponent="input"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  placeholder="Please provide a link to a source verifying that this information is correct."
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="MuiInputBase-root-74 MuiInput-root-61 MuiInput-underline-65 MuiInputBase-fullWidth-83 MuiInput-fullWidth-68 MuiInputBase-formControl-75 MuiInput-formControl-62"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-invalid={false}
                                      className="MuiInputBase-input-84 MuiInput-input-69"
                                      disabled={false}
                                      id="standard-required"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="Please provide a link to a source verifying that this information is correct."
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </InputBase>
                              </WithFormControlContext(InputBase)>
                            </WithStyles(WithFormControlContext(InputBase))>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
                <WithStyles(WithFormControlContext(FormHelperText))
                  htmlFor="standard-required"
                  style={
                    Object {
                      "color": "red",
                      "marginBottom": "1vh",
                    }
                  }
                >
                  <WithFormControlContext(FormHelperText)
                    classes={
                      Object {
                        "contained": "MuiFormHelperText-contained-95",
                        "disabled": "MuiFormHelperText-disabled-93",
                        "error": "MuiFormHelperText-error-92",
                        "filled": "MuiFormHelperText-filled-97",
                        "focused": "MuiFormHelperText-focused-96",
                        "marginDense": "MuiFormHelperText-marginDense-94",
                        "required": "MuiFormHelperText-required-98",
                        "root": "MuiFormHelperText-root-91",
                      }
                    }
                    htmlFor="standard-required"
                    style={
                      Object {
                        "color": "red",
                        "marginBottom": "1vh",
                      }
                    }
                  >
                    <FormHelperText
                      classes={
                        Object {
                          "contained": "MuiFormHelperText-contained-95",
                          "disabled": "MuiFormHelperText-disabled-93",
                          "error": "MuiFormHelperText-error-92",
                          "filled": "MuiFormHelperText-filled-97",
                          "focused": "MuiFormHelperText-focused-96",
                          "marginDense": "MuiFormHelperText-marginDense-94",
                          "required": "MuiFormHelperText-required-98",
                          "root": "MuiFormHelperText-root-91",
                        }
                      }
                      component="p"
                      htmlFor="standard-required"
                      style={
                        Object {
                          "color": "red",
                          "marginBottom": "1vh",
                        }
                      }
                    >
                      <p
                        className="MuiFormHelperText-root-91"
                        htmlFor="standard-required"
                        style={
                          Object {
                            "color": "red",
                            "marginBottom": "1vh",
                          }
                        }
                      >
                        Required *
                      </p>
                    </FormHelperText>
                  </WithFormControlContext(FormHelperText)>
                </WithStyles(WithFormControlContext(FormHelperText))>
              </form>
              <WithStyles(Button)
                color="primary"
                disabled={true}
                id="form-submit"
                onClick={[Function]}
                variant="contained"
              >
                <Button
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit-49",
                      "contained": "MuiButton-contained-39",
                      "containedPrimary": "MuiButton-containedPrimary-40",
                      "containedSecondary": "MuiButton-containedSecondary-41",
                      "disabled": "MuiButton-disabled-48",
                      "extendedFab": "MuiButton-extendedFab-46",
                      "fab": "MuiButton-fab-45",
                      "flat": "MuiButton-flat-33",
                      "flatPrimary": "MuiButton-flatPrimary-34",
                      "flatSecondary": "MuiButton-flatSecondary-35",
                      "focusVisible": "MuiButton-focusVisible-47",
                      "fullWidth": "MuiButton-fullWidth-53",
                      "label": "MuiButton-label-29",
                      "mini": "MuiButton-mini-50",
                      "outlined": "MuiButton-outlined-36",
                      "outlinedPrimary": "MuiButton-outlinedPrimary-37",
                      "outlinedSecondary": "MuiButton-outlinedSecondary-38",
                      "raised": "MuiButton-raised-42",
                      "raisedPrimary": "MuiButton-raisedPrimary-43",
                      "raisedSecondary": "MuiButton-raisedSecondary-44",
                      "root": "MuiButton-root-28",
                      "sizeLarge": "MuiButton-sizeLarge-52",
                      "sizeSmall": "MuiButton-sizeSmall-51",
                      "text": "MuiButton-text-30",
                      "textPrimary": "MuiButton-textPrimary-31",
                      "textSecondary": "MuiButton-textSecondary-32",
                    }
                  }
                  color="primary"
                  component="button"
                  disableFocusRipple={false}
                  disabled={true}
                  fullWidth={false}
                  id="form-submit"
                  mini={false}
                  onClick={[Function]}
                  size="medium"
                  type="button"
                  variant="contained"
                >
                  <WithStyles(ButtonBase)
                    className="MuiButton-root-28 MuiButton-contained-39 MuiButton-containedPrimary-40 MuiButton-raised-42 MuiButton-raisedPrimary-43 MuiButton-disabled-48"
                    component="button"
                    disabled={true}
                    focusRipple={true}
                    focusVisibleClassName="MuiButton-focusVisible-47"
                    id="form-submit"
                    onClick={[Function]}
                    type="button"
                  >
                    <ButtonBase
                      centerRipple={false}
                      className="MuiButton-root-28 MuiButton-contained-39 MuiButton-containedPrimary-40 MuiButton-raised-42 MuiButton-raisedPrimary-43 MuiButton-disabled-48"
                      classes={
                        Object {
                          "disabled": "MuiButtonBase-disabled-55",
                          "focusVisible": "MuiButtonBase-focusVisible-56",
                          "root": "MuiButtonBase-root-54",
                        }
                      }
                      component="button"
                      disableRipple={false}
                      disableTouchRipple={false}
                      disabled={true}
                      focusRipple={true}
                      focusVisibleClassName="MuiButton-focusVisible-47"
                      id="form-submit"
                      onClick={[Function]}
                      tabIndex="0"
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root-54 MuiButtonBase-disabled-55 MuiButton-root-28 MuiButton-contained-39 MuiButton-containedPrimary-40 MuiButton-raised-42 MuiButton-raisedPrimary-43 MuiButton-disabled-48"
                        disabled={true}
                        id="form-submit"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onContextMenu={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex="-1"
                        type="button"
                      >
                        <span
                          className="MuiButton-label-29"
                        >
                          Submit
                        </span>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
          </div>
        </Paper>
      </WithStyles(Paper)>
    </UnwrappedQuestionSubmitForm>
  </Router>
</BrowserRouter>
`;
