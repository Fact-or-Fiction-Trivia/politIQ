// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CashOutButton /> should render correctly and match snapshot 1`] = `
<CashOutButton
  uid="GvM7fEkYp4fcaSuScwixV0xinfT2"
  userInfo={
    Object {
      "affiliation": "Republican",
      "bio": "Forever thinking about chicken nuggs ",
      "cashoutRequested": false,
      "displayName": "Hannah",
      "email": "hannah.werman@gmail.com",
      "emailVerified": false,
      "invisibleScore": false,
      "isAdmin": false,
      "lastActive": "2019-08-06",
      "lifetimeEarnings": 5,
      "moneyWon": 5,
      "soundsOn": true,
      "uid": "GvM7fEkYp4fcaSuScwixV0xinfT2",
    }
  }
>
  <WithStyles(Button)
    color="primary"
    disabled={false}
    id="cashOut"
    onClick={[Function]}
    variant="contained"
  >
    <Button
      classes={
        Object {
          "colorInherit": "MuiButton-colorInherit-22",
          "contained": "MuiButton-contained-12",
          "containedPrimary": "MuiButton-containedPrimary-13",
          "containedSecondary": "MuiButton-containedSecondary-14",
          "disabled": "MuiButton-disabled-21",
          "extendedFab": "MuiButton-extendedFab-19",
          "fab": "MuiButton-fab-18",
          "flat": "MuiButton-flat-6",
          "flatPrimary": "MuiButton-flatPrimary-7",
          "flatSecondary": "MuiButton-flatSecondary-8",
          "focusVisible": "MuiButton-focusVisible-20",
          "fullWidth": "MuiButton-fullWidth-26",
          "label": "MuiButton-label-2",
          "mini": "MuiButton-mini-23",
          "outlined": "MuiButton-outlined-9",
          "outlinedPrimary": "MuiButton-outlinedPrimary-10",
          "outlinedSecondary": "MuiButton-outlinedSecondary-11",
          "raised": "MuiButton-raised-15",
          "raisedPrimary": "MuiButton-raisedPrimary-16",
          "raisedSecondary": "MuiButton-raisedSecondary-17",
          "root": "MuiButton-root-1",
          "sizeLarge": "MuiButton-sizeLarge-25",
          "sizeSmall": "MuiButton-sizeSmall-24",
          "text": "MuiButton-text-3",
          "textPrimary": "MuiButton-textPrimary-4",
          "textSecondary": "MuiButton-textSecondary-5",
        }
      }
      color="primary"
      component="button"
      disableFocusRipple={false}
      disabled={false}
      fullWidth={false}
      id="cashOut"
      mini={false}
      onClick={[Function]}
      size="medium"
      type="button"
      variant="contained"
    >
      <WithStyles(ButtonBase)
        className="MuiButton-root-1 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16"
        component="button"
        disabled={false}
        focusRipple={true}
        focusVisibleClassName="MuiButton-focusVisible-20"
        id="cashOut"
        onClick={[Function]}
        type="button"
      >
        <ButtonBase
          centerRipple={false}
          className="MuiButton-root-1 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16"
          classes={
            Object {
              "disabled": "MuiButtonBase-disabled-28",
              "focusVisible": "MuiButtonBase-focusVisible-29",
              "root": "MuiButtonBase-root-27",
            }
          }
          component="button"
          disableRipple={false}
          disableTouchRipple={false}
          disabled={false}
          focusRipple={true}
          focusVisibleClassName="MuiButton-focusVisible-20"
          id="cashOut"
          onClick={[Function]}
          tabIndex="0"
          type="button"
        >
          <button
            className="MuiButtonBase-root-27 MuiButton-root-1 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16"
            disabled={false}
            id="cashOut"
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex="0"
            type="button"
          >
            <span
              className="MuiButton-label-2"
            >
              Cash Out
            </span>
            <NoSsr
              defer={false}
              fallback={null}
            >
              <WithStyles(TouchRipple)
                center={false}
                innerRef={[Function]}
              >
                <TouchRipple
                  center={false}
                  classes={
                    Object {
                      "child": "MuiTouchRipple-child-36",
                      "childLeaving": "MuiTouchRipple-childLeaving-37",
                      "childPulsate": "MuiTouchRipple-childPulsate-38",
                      "ripple": "MuiTouchRipple-ripple-33",
                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-35",
                      "rippleVisible": "MuiTouchRipple-rippleVisible-34",
                      "root": "MuiTouchRipple-root-32",
                    }
                  }
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    className="MuiTouchRipple-root-32"
                    component="span"
                    enter={true}
                    exit={true}
                  >
                    <span
                      className="MuiTouchRipple-root-32"
                    />
                  </TransitionGroup>
                </TouchRipple>
              </WithStyles(TouchRipple)>
            </NoSsr>
          </button>
        </ButtonBase>
      </WithStyles(ButtonBase)>
    </Button>
  </WithStyles(Button)>
  <WithStyles(Modal)
    aria-describedby="Coming soon - cash out and receive your earnings!"
    aria-labelledby="Cash Out"
    className="cashout-modal"
    onClose={[Function]}
    open={false}
  >
    <Modal
      BackdropComponent={[Function]}
      aria-describedby="Coming soon - cash out and receive your earnings!"
      aria-labelledby="Cash Out"
      className="cashout-modal"
      classes={
        Object {
          "hidden": "MuiModal-hidden-31",
          "root": "MuiModal-root-30",
        }
      }
      closeAfterTransition={false}
      disableAutoFocus={false}
      disableBackdropClick={false}
      disableEnforceFocus={false}
      disableEscapeKeyDown={false}
      disablePortal={false}
      disableRestoreFocus={false}
      hideBackdrop={false}
      keepMounted={false}
      manager={
        ModalManager {
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "modals": Array [],
        }
      }
      onClose={[Function]}
      open={false}
    />
  </WithStyles(Modal)>
</CashOutButton>
`;
